% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-forecasts-compare.R
\name{plot_forecasts_compare}
\alias{plot_forecasts_compare}
\title{Plot comparison of forecasts}
\usage{
plot_forecasts_compare(
  forecast_data,
  ingest = c("dataframe", "path", "list"),
  hub_forecasts = NULL,
  truth,
  missing = c("remove", "zero"),
  scale_model = NULL,
  limit = NULL,
  write_copy = TRUE
)
}
\arguments{
\item{forecast_data}{A dataframe containing forecast predictions as exported from the RAPIDD API, or a list of such dataframes.}

\item{ingest}{A character string specifying the format of the \code{forecast_data} input. Can be one of 'dataframe', 'path' or 'list'. Defaults to 'dataframe'.}

\item{hub_forecasts}{(optional) A dataframe containing hub forecasts predictions as exported from the RAPIDD API.}

\item{truth}{A dataframe containing true values.}

\item{missing}{A character string specifying how to handle missing values in the true values dataset. Can be one of 'remove' or 'zero'. Default is 'remove'.}

\item{scale_model}{(optional) A character string specifying the name of the model to use as a reference for scaling scores.}

\item{limit}{(optional) A numeric value for the upper limit of the score scale. Default is NULL.}

\item{write_copy}{(optional) Logical indicating whether to save outputs to the current working directory. Default is TRUE.}
}
\value{
A ggplot2 object that shows the relative overall performance of different models compared to each other.
}
\description{
This function takes in forecast data and truth data, compares models and plots the relative overall performance over time. Multiple file ingest formats are available. The function can be scaled using a specified model for normalization. Graphics are written to file.
}
\details{
The function applies the scoringutils::score() function to calculate interval scores (WIS), then performs a normalization step if \code{scale_model} is provided. Graphics are written to file in the current working directory.
}
\examples{
# Load example data
data('example_test_forecasts')
data('example_hub_forecasts')
data('example_truth_data')

# Plot comparison of forecasts, with test data input as a dataframe
plot_forecasts_compare(forecast_data = example_test_forecasts,
hub_forecasts = example_hub_forecasts,
truth = example_truth_data)
}
